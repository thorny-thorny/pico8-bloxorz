pico-8 cartridge // http://www.pico-8.com
version 30
__lua__
x0 = -2
y0 = 15
width_tiles = 16
height_tiles = 10

sprite_type = {
	start = 0b0001,
	finish = 0b0010,
	circle_button_on = 0b0011,
	circle_button_off = 0b0100,
	circle_button_toggle = 0b0101,
	cross_button_on = 0b0110,
	cross_button_off = 0b0111,
	cross_button_toggle = 0b1000,
	platform_on = 0b1001,
	platform_off = 0b1010,
	fragile = 0b1011,
	portal = 0b1100,
	portal_half = 0b1101,
	portal_target=0b1110,
}

function uvtox(u, v)
 return x0+7*u+2*v
end

function uvtoy(u, v)
 return y0+2*(16-u)+6*v
end

function get_sprite_type(sprite)
	return fget(sprite) & 0b1111
end

function sprite_is_start(sprite)
	return get_sprite_type(sprite) == sprite_type.start
end

function sprite_is_finish(sprite)
	return get_sprite_type(sprite) == sprite_type.finish
end

function sprite_is_circle_button(sprite)
 local stype = get_sprite_type(sprite)
	return
		stype == sprite_type.circle_button_on or
		stype == sprite_type.circle_button_off or
		stype == sprite_type.circle_button_toggle
end

function sprite_is_cross_button(sprite)
	local stype = get_sprite_type(sprite)
	return
		stype == sprite_type.cross_button_on or
		stype == sprite_type.cross_button_off or
		stype == sprite_type.cross_button_toggle
end

function sprite_is_platform(sprite)
	local stype = get_sprite_type(sprite)
	return
		stype == sprite_type.platform_on or
		stype == sprite_type.platform_off
end

function sprite_platform_state(sprite)
	if get_sprite_type(sprite) == sprite_type.platform_on then
		return 1
	else
		return -1
	end
end

function sprite_is_fragile(sprite)
	return get_sprite_type(sprite) == sprite_type.fragile
end

function sprite_is_portal(sprite)
 local stype = get_sprite_type(sprite)
 return
 	stype == sprite_type.portal or
 	stype == sprite_type.portal_half
end

function sprite_is_portal_half(sprite)
	return get_sprite_type(sprite) == sprite_type.portal_half
end

function sprite_is_portal_target(sprite)
 return get_sprite_type(sprite) == sprite_type.portal_target
end

function sprite_index_bit(sprite)
	local index_bits = (fget(sprite) >> 4) & 0b1111
	
	for i = 1,4 do
		if ((index_bits >> (i - 1)) & 0b1) > 0 then
			return i
		end
	end
	
	return 0
end
-->8
block_side = {
	z = 0, // location: [(u, v)]
	u = 1, // location: [(u, v), (u+1, v)]
	v = 2, // location: [(u, v), (u, v+1)]
}

falling_animation_delay = 3

function block_create(u, v)
	local block = {
		u = u,
		v = v,
		u2 = u,
		v2 = v,
		split = false,
		split_index = 0,
		side = block_side.z,
		updated = false,
		did_animated_fall = false,
	}
	block.animation = {
		cycles_left = 10,
		frame = 0,
		from_side = block.side,
		from_u = block.u,
		from_v = block.v,
	}
	return block
end

function block_animate_falling(block, hole)
	local du = 0
	local dv = 0
	local same = block.side == block.prev_side
	
	if not same then
		if hole.u > block.u then
			du = 1
		elseif hole.v > block.v then
			dv = 1
		elseif
			hole.u == block.u or
			hole.v == block.v
		then
			if block.u == block.prev_u then
				block.v += 1
				dv = -1
			else
				block.u += 1
				du = -1
			end
		end
	end
	
	block.animation = {
		cycles_left = falling_animation_delay,
		delay_left = falling_animation_delay,
		frame = 0,
		from_side = block.side,
		from_u = block.u,
		from_v = block.v,
		falling = true,
	}
	block.side = block_side.z
	block.u += du
	block.v += dv
	
	if same then
		block.animation.cycles_left = 100
	end 
end

function block_get_points(block)
	local points = {}
	points[1] = {
		u = block.u,
		v = block.v,
	}
	
	if block.split then
		points[2] = {
			u = block.u2,
			v = block.v2,
		}
	elseif block.side == block_side.u then
		points[2] = {
			u = block.u+1,
			v = block.v,
		}
	elseif block.side == block_side.v then
		points[2] = {
			u = block.u,
			v = block.v+1,
		}
	end
		
	return points
end

function block_stands_on(block, u, v, whole)
	local points = block_get_points(block)
	if whole then
		if #points != 1 then
			return false
		else	
			return points[1].u == u and points[1].v == v
		end	
	end
end

function block_split(block, u1, v1, u2, v2)
	block.split = true
	block.split_index = 0
	block.side = block_side.z
	block.u = u1
	block.v = v1
	block.u2 = u2
	block.v2 = v2
end

function block_update(block)
	if block.animation != nil then
		if block.animation.frame > 30 then
			block.did_animated_fall = true
			block.animation = nil
			return
		elseif block.animation.cycles_left > 0 then
			block.animation.cycles_left -= 1
			block.animation.frame += 1
			return
		elseif block.animation.delay_left != nil then
			if block.animation.delay_left > 0 then
				block.animation.delay_left -= 1
				block.animation.frame +=1
				return
			end

			local prev_side = block.animation.from_side
			local du = block.u - block.animation.from_u
			local dv = block.v - block.animation.from_v
			block.animation = {
				cycles_left = falling_animation_delay,
				delay_left = falling_animation_delay,
				frame = block.animation.frame,
				from_side = block.side,
				from_u = block.u-du,
				from_v = block.v-dv,
				falling = true,
			}
			block.side = prev_side
			return
		elseif block.animation.falling == nil then
			block.animation = nil
			return
		end
	end

	local du = 0
	local dv = 0
	block.updated = false

 if btnp(‚¨ÖÔ∏è) then
 	du = -1 
 elseif btnp(‚û°Ô∏è) then
 	du = 1
 elseif btnp(‚¨ÜÔ∏è) then
 	dv = -1
 elseif btnp(‚¨áÔ∏è) then
 	dv = 1
 elseif btnp(üÖæÔ∏è) then
  block.split_index = 1 - block.split_index
 end
 
 if du != 0 or dv != 0 then
 	block.animation = {
 		cycles_left = 1,
 		frame = 0,
 		from_side = block.side,
 		from_u = block.u,
 		from_v = block.v,
 	}
 	block.prev_u = block.u
 	block.prev_v = block.v
 	block.prev_side = block.side
 end
	
	if du != 0 then
	 if block.split then
	 	block.side = block_side.z
		elseif block.side == block_side.z then
			if du < 0 then du = -2 end
			block.side = block_side.u
		elseif block.side == block_side.u then
			if du > 0 then du = 2 end
			block.side = block_side.z
		end

		if
			block.split and
			block.split_index == 1
		then		
			block.u2 += du
		else
			block.u += du
		end
		block.updated = true
	elseif dv != 0 then
	 if block.split then
	  block.side = block_side.z
		elseif block.side == block_side.z then
			if dv < 0 then dv = -2 end
			block.side = block_side.v
		elseif block.side == block_side.v then
			if dv > 0 then dv = 2 end 
			block.side = block_side.z
		end
		
		if
			block.split and
			block.split_index == 1
		then
			block.v2 += dv
		else
			block.v += dv
		end
		block.updated = true
	end
	
	if block.split then
		local touch_u =
			abs(block.u-block.u2) == 1 and
			block.v == block.v2
		local touch_v =
			abs(block.v-block.v2) == 1 and
			block.u == block.u2
		if touch_u or touch_v then
			block.split = false
			if touch_u then
				block.side = block_side.u
				block.u = min(block.u, block.u2)
			else
				block.side = block_side.v
				block.v = min(block.v, block.v2)
			end
		end
	end
end

function block_subdraw(block, sub)
 local x = 0
 local y = 0
 if not sub then
  x = uvtox(block.u, block.v)
  y = uvtoy(block.u, block.v)
 else
 	x = uvtox(block.u2, block.v2)
  y = uvtoy(block.u2, block.v2)
 end
 local sprite = 0
 local thin = false
 
 if
 	block.animation != nil and
 	block.animation.cycles_left > 0
 then
 	local z_to_u =
 		(
 			block.side == block_side.u and
 			block.animation.from_side == block_side.z
 		)
 	local z_to_v =
 		(
 			block.side == block_side.v and
 			block.animation.from_side == block_side.z
 		)
 	local u_to_z =
 		(
 			block.side == block_side.z and
 			block.animation.from_side == block_side.u
 		)
 	local v_to_z =
 		(
 			block.side == block_side.z and
 			block.animation.from_side == block_side.v
 		)
 	local v_to_v =
 		(
 			block.side == block_side.v and
 			block.animation.from_side == block_side.v
 		)
 	local u_to_u =
 		(
 			block.side == block_side.u and
 			block.animation.from_side == block_side.u
 		)
 	local z_to_z =
 		(
 			block.side == block_side.z and
 			block.animation.from_side == block_side.z
 		)
 	local u_greater = block.u > block.animation.from_u
		local v_greater = block.v > block.animation.from_v

		if z_to_u and u_greater then
 		sprite = 70
	 	x -= 3
	 	y -= 8
	 elseif z_to_u and not u_greater then
	 	sprite = 72
	 	x += 3
	 	y -= 13
 	elseif u_to_z and not u_greater then
 		sprite = 70
 		x += 4
 		y -= 10
 	elseif u_to_z and u_greater then
 		sprite = 72
 		x -= 11
 		y -= 9
 	elseif z_to_v and v_greater then
 		sprite = 74
 		x -= 0
 		y -= 10
 	elseif z_to_v and not v_greater then
 		sprite = 76
 		x -= 4
 		y -= 2
 	elseif v_to_z and not v_greater then
 		sprite = 74
 		x += 2
 		y -= 4
 	elseif v_to_z and v_greater then
 		sprite = 76
 		x -= 7
 		y -= 13
 	elseif v_to_v and u_greater then
 		sprite = 78
 		x -= 5
 		y -= 3
 	elseif v_to_v and not u_greater then
 		sprite = 78
 		x += 2
 		y -= 5
 	elseif u_to_u and v_greater then
 		sprite = 96
 		x += 0
 		y -= 14
 	elseif u_to_u and not v_greater then
 		sprite = 96
 		x += 0
 		y -= 10
 	elseif z_to_z then
 		y -= block.animation.cycles_left*10
 	end
 end
 
 if
 	block.animation and
 	block.animation.falling != nil and
 	block.animation.from_side != block.side
 then
 	local dux = uvtox(1, 0)-uvtox(0, 0)
 	local duy = uvtoy(1, 0)-uvtoy(0, 0)
		local dvx = uvtox(0, 1)-uvtox(0, 0)
 	local dvy = uvtoy(0, 1)-uvtoy(0, 0)
		local du = block.u - block.animation.from_u
		local dv = block.v - block.animation.from_v

  if block.animation.cycles_left == 0 then
 		if block.side == block_side.u then
 			x -= dux/2
 			//y -= duy/2
 		elseif block.side == block_side.v then
 			y -= dvy/2
 		end
 	end

 	if block.animation.cycles_left > 0 then
 		if block.side == block_side.z then
 			x += dux*du+dvx*dv
 			y += duy*du+dvy*dv
 		end
 		if
 			block.side == block_side.u and
 			du < 0
 		then
 			x -= dux
 		end
 		if
 			block.side == block_side.v and
 			dv < 0
 		then
 			y -= dvy
 		end
 	end
 	
 	y += block.animation.frame*4
 end
 
 if sprite == 0 then
	 if block.split then
	 	sprite = 69
	 	y -= 10
	 	thin = true
	 elseif block.side == block_side.u then
	 	sprite = 64
	 	y -= 10
	 elseif block.side == block_side.z then
			sprite = 66
			y -= 10
			thin = true
	 elseif block.side == block_side.v then
			sprite = 67
			x -= 6
			y -= 4
	 end
 end
  
 spr(sprite, x, y)
	spr(sprite+16, x, y+8)
	if not thin then
  spr(sprite+1, x+8, y)
		spr(sprite+17, x+8, y+8)
 end
end

function block_draw(block)
	block_subdraw(block, false)
	if block.split then
		block_subdraw(block, true)
	end
end
-->8
function level_create(n)
	local mx0 = (n%8)*width_tiles
	local my0 = flr(n/8)*height_tiles
	local start = { u = 0, v = 0 }
	local finish = { u = 0, v = 0 }
	
	for u = 0, width_tiles-1 do
		for v = 0, height_tiles-1 do
			local sprite = mget(mx0+u, my0+v)
			if sprite_is_start(sprite) then
				start.u = u
				start.v = v
			elseif sprite_is_finish(sprite) then
				finish.u = u
				finish.v = v
			end
		end
	end
	
	return {
		mx0 = mx0,
		my0 = my0,
		start = start,
		finish = finish,
		block = block_create(start.u, start.v),
		finished = false,
		platforms = { 0, 0, 0, 0 },
		hole = nil,
	}
end

function level_press_button(level, sprite)
	local index = sprite_index_bit(sprite)
 local state = level.platforms[index]
	local stype = get_sprite_type(sprite)
	if
		stype == sprite_type.circle_button_on or
		stype == sprite_type.cross_button_on
	then
		state = 1
	elseif
		stype == sprite_type.circle_button_off or
		stype == sprite_type.cross_button_off
	then
		state = -1
	else
	 if state == 0 then
			state = 2
		elseif state == 2 then
			state = 0
		else
			state = -state
		end
	end
	
	level.platforms[index] = state
end

function level_enter_portal(level, sprite)
 local index = sprite_index_bit(sprite)
	local u1 = -1
	local v1 = -1
	local u2 = -1
	local v2 = -1
	
	for u = 0, width_tiles-1 do
		for v = 0, height_tiles-1 do
			local sprite = mget(level.mx0+u, level.my0+v)
			if
				sprite_is_portal_half(sprite) or
				(
					sprite_is_portal_target(sprite) and
					sprite_index_bit(sprite) == index
				) or
				(
					sprite_is_start(sprite) and
					sprite_index_bit(sprite) == index
				)			
			then
				if u1 == -1 then
					u1 = u
					v1 = v
				else
					u2 = u
					v2 = v
				end
			end
		end
	end
	
	block_split(level.block, u1, v1, u2, v2)
end

function level_platform_state(level, sprite)
	local index = sprite_index_bit(sprite)
 local state = level.platforms[index]
	if state == 1 then
		return 1
	elseif state == -1 then
		return -1
	else
		local pstate = sprite_platform_state(sprite)
		if state == 0 then
			return pstate
		else
			return -pstate
		end
	end
end

function level_update(level)
	block_update(level.block)
	if level.block.animation then
		return
	end

	if block_stands_on(level.block, level.finish.u, level.finish.v, true) then
		level.finished = true
	else
		local points = block_get_points(level.block)
		local died = false
		local hole = nil
		for i = 1, #points do
			local sprite = mget(level.mx0+points[i].u, level.my0+points[i].v)
			if
				sprite == 0 or
				points[i].u < 0 or
				points[i].u >= 16 or
				points[i].v < 0 or
				points[i].v >= 10
			then
				died = true
				hole = points[i]
			elseif
				#points == 1 and
				sprite_is_fragile(sprite)
			then
				died = true
				hole = points[i]
			elseif
				sprite_is_platform(sprite) and
				level_platform_state(level, sprite) < 0
			then
				died = true
				hole = points[i]
			elseif
			 #points == 1 and
				sprite_is_portal(sprite)
			then
			 if level.block.updated then
			 	level_enter_portal(level, sprite)
				end
			elseif
				sprite_is_circle_button(sprite) or
				(
					sprite_is_cross_button(sprite) and
					#points == 1
				)
			then
				if level.block.updated then
					level_press_button(level, sprite)
				end
			end
		end
		
		if died and not level.block.did_animated_fall then
			level.hole = hole
			block_animate_falling(level.block, hole)
			return
		end
		
		if died then
			level.block = block_create(
				level.start.u,
				level.start.v
			)
			level.platforms = { 0, 0, 0, 0 }
			level.hole = nil
		end
	end
end

function level_draw(level)
	local hole_u = width_tiles
	local hole_v = height_tiles
	
	if level.hole != nil then
		hole_u = level.hole.u
		hole_v = level.hole.v
	end

 for u = width_tiles-1,0,-1 do
  for v = 0,height_tiles-1 do
  	if 
  		(
  			u > hole_u and
  			v <= hole_v
  		) or (
  			u <= hole_u and
  			v < hole_v
  		)
  	then
  		tile_draw(level, u, v)
  	end
 	end
 end
 
 block_draw(level.block)
 
 for u = width_tiles-1,0,-1 do
  for v = 0,height_tiles-1 do
  	if 
  		(
  			u > hole_u and
  			v > hole_v
  		) or (
  			u <= hole_u and
  			v >= hole_v
  		)
  	then
  		tile_draw(level, u, v)
  	end
 	end
 end
end

function tile_draw(level, u, v)
 local sprite = mget(level.mx0+u, level.my0+v)
 if sprite > 0 then
 	if sprite_is_start(sprite) then
 		sprite = 1
 	elseif sprite_is_circle_button(sprite) then
 		sprite = 2
 	elseif sprite_is_cross_button(sprite) then
 		sprite = 3
 	elseif sprite_is_platform(sprite) then
 		if level_platform_state(level, sprite) > 0 then
 			sprite = 4
 		else
 			sprite = 0
 		end
 	elseif sprite_is_portal(sprite) then
 		sprite = 7
 	elseif sprite_is_portal_target(sprite) then
 		sprite = 1
 	end
  	
 	if sprite > 0 then
  	spr(sprite, uvtox(u, v), uvtoy(u, v))
 	end
 end
end

-->8
function game_create()
	return {
	 level_number = 1,
	 levels_total = 7,
		level = level_create(0),
	}
end

function game_update(game)
	level_update(game.level)
	if game.level.finished then
	 local new_level_number = game.level_number+1
	 if new_level_number > game.levels_total then
	 	new_level_number = 1
	 end
	 game.level_number = new_level_number
		game.level = level_create(new_level_number)
	end
end

function game_draw(game)
 cls()
	map(0, 48, 0, 0, 16, 16)
	level_draw(game.level)
end

-->8
game = game_create()

function _update()
	game_update(game)
end

function _draw()
	game_draw(game)
end

__gfx__
00000000000666600006666000066660000dddd0000999900001115000066660000666600006666000066660000dddd0000dddd0000dddd0000dddd000066660
00000000666666606666446066661660ddddddd099999990114444406666cc60666666606666446066661660ddddddd0ddddddd0ddddddd0ddddddd066664460
007007005666666656444446566111665ddddddd59999999544aaa4556c66cc6567666665a4b88865a68b88658db888d58d8b88d5bdb888d5bd88b8d5b48b886
000770005666666656444446566616665ddddddd599999995aaaaaa456cc66c65666666656444446566616665ddddddd5ddddddd5ddddddd5ddddddd56444446
0007700055666666556446665566666655dddddd5599999955a777aa556cc66655666666556446665566666655dddddd55dddddd55dddddd55dddddd55644666
0070070055666111556661115566611155ddd11155999444557771115566611155666111556661115566611155ddd11155ddd11155ddd11155ddd11155666111
00000000051111110511111105111111051111110544444405111111051111110511111105111111051111110511111105111111051111110511111105111111
00000000051110000511100005111000051110000544400005111000051110000511100005111000051110000511100005111000051110000511100005111000
00066660000dddd00006666000066660000666600006666000066660000000000000000000000000000000000000000000000000000000000000000000000000
66664460ddddddd06666cc60666666606666cc606666666066661660000000000000000000000000000000000000000000000000000000000000000000000000
5848b8865bd8b88d56cb88865c6b88865bcb8886576b88865b6b8886000000000000000000000000000000000000000000000000000000000000000000000000
564444465ddddddd56cc66c65666666656cc66c65c66666656661666000000000000000000000000000000000000000000000000000000000000000000000000
5564466655dddddd556cc66655666666556cc6665566666655666666000000000000000000000000000000000000000000000000000000000000000000000000
5566611155ddd1115566611155666111556661115566611155666111000000000000000000000000000000000000000000000000000000000000000000000000
05111111051111110511111105111111051111110511111105111111000000000000000000000000000000000000000000000000000000000000000000000000
05111000051110000511100005111000051110000511100005111000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000eeee000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000eeeeeee0000000000eeee000000000000000000eeee000000000000000000000000000000000000000000000000000000000000000000000
00000000000000005eeeeeee000000eeeeeee00000000000000000eeeeee20000000000000000000000000000000000000000000000000000000000000000000
00000000000000005eeeeeee0000005eeeeeee000000000000000eeeeee2200000eee00000000000000000000000000000000000000000000000000000000000
00000000000eeee055eeeeee0000005eeeeeee00000000000000eeeeee22220005eeeeee00000000000000000000000000000000000000000000000000000000
0000000eeeeeeee055eee22200000055eeeeeee000000000000eeeeee222220005eeeeeeeee00000000eeee00000000000000000000000000000000000000000
000eeeeeeeeeeeee5522222200000055eeeeeee0000eeee000eeeeee2222200005eeeeeeeeeeee00eeeeeeeee000000000000000000000000000000000000000
eeeeeeeeeeeeeeee5522222200000055eeeeeee0eeeeeee00eeeeee22222000055eeeeeeeeeeeeee5eeeeeeeee00000000000000000000000000000000000000
5eeeeeeeeeeeeeee55222222000000055eeeeeee5eeeeeeeeeeeee22222000005522eeeeeeeeeeee555eeee22200000000000000000000000000000000000000
5eeeeeeeeeee222255222222000000055eeeeeee5eeeeeee5eeee222220000005222222eeeeeeeee555522222200000000000000000000000000000000000000
55eeeeeee2222222552222220000000555eeeeee55eeeeee55ee2222200000005222222222eeeeee555522222200000000000000000000000000000000000000
55eee22222222222552222220000000055eee22255eee22205522222000000002222222222222eee555522222200000000000000000000000000000000000000
55222222222222225522222200000000552222225522222205522220000000000022222222222220055522222200000000000000000000000000000000000000
05222222222200005522222200000000552222225522222200552200000000000000022222222220000522200000000000000000000000000000000000000000
05222222200000000522222200000000052222220522222200052000000000000000000022222200000000000000000000000000000000000000000000000000
05222000000000000522200000000000052220000522200000000000000000000000000000022200000000000000000000000000000000000000000000000000
0000000000000000000eeee000000000000000000000000000000000e00000000000000000000000000000000000000000000000eee00000000000ee00000000
0000000000000000eeeeeee0000000000eeee000000000000000000eeee000000000000000000000000000000000000000000eeeeeee00000000eeee00000000
00000000000000005eeeeeee000000eeeeeee00000000000000000eeeeee200000000000000000000000000000000000000005eee222000000eeeeeee0000000
00000000000000005eeeeeee0000005eeeeeee000000000000000eeeeee2200000eee0000000000000000000000000000000052222220000005eeeeee0000000
00000000000eeee055eeeeee0000005eeeeeee00000000000000eeeeee22220005eeeeee0000000000000000000000000000055222220000005eeeeeee000000
0000000eeeeeeee055eee22200000055eeeeeee000000000000eeeeee222220005eeeeeeeee00000000eeee00000000000000552222220000055eeeeee000000
000eeeeeeeeeeeee5522222200000055eeeeeee0000eeee000eeeeee2222200005eeeeeeeeeeee00eeeeeeeee000000000000552222220000005eeeeee000000
eeeeeeeeeeeeeeee5522222200000055eeeeeee0eeeeeee00eeeeee22222000055eeeeeeeeeeeeee5eeeeeeeee00000000000552222220000005eeeeeee00000
5eeeeeeeeeeeeeee55222222000000055eeeeeee5eeeeeeeeeeeee22222000005522eeeeeeeeeeee555eeee222000000000000552222200000005eeee2200000
5eeeeeeeeeee222255222222000000055eeeeeee5eeeeeee5eeee222220000005222222eeeeeeeee5555222222000000000000552222220000005ee222220000
55eeeeeee2222222552222220000000555eeeeee55eeeeee55ee2222200000005222222222eeeeee555522222200000000000055222222000000552222220000
55eee22222222222552222220000000055eee22255eee22205522222000000002222222222222eee555522222200000000000055222222000000052222220000
55222222222222225522222200000000552222225522222205522220000000000022222222222220055522222200000000000005222222000000052222222000
05222222222200005522222200000000552222225522222200552200000000000000022222222220000522200000000000000005222222000000005222222000
05222222200000000522222200000000052222220522222200052000000000000000000022222200000000000000000000000005222222000000005222200000
05222000000000000522200000000000052220000522200000000000000000000000000000022200000000000000000000000005222000000000000520000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000eeeeeee22220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000eeeeee22222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeeee22222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55522222222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55522222222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55522222222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55522222222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55522222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55522200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888288828882828282828282828282828282828282822282228222222222222222222222222222222220000000000000000000000000000000000000000
88888888888888888888888882888288828882888282828282828282828282822282228222222222222222220000000000000000000000000000000000000000
88888888888888888828882828282828282828282828282828222822282228222222222222222222222222220000000000000000000000000000000000000000
88888888888888888888888888888888888288828282828282828282828282828282828282228222222222220000000000000000000000000000000000000000
88888888288828882828282828282828282828282228222822222222222222222222222222222222222222220000000000000000000000000000000000000000
88888888888888888888888882888288828282828282828282828282828282822282228222222222222222220000000000000000000000000000000000000000
88888888882888282828282828282828282828282828282828222822222222222222222222222222222222220000000000000000000000000000000000000000
88888888888888888888888888828882888288828282828282828282828282828222822222222222222222220000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
18181818181818181818181818181818000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
28282828282828282828282828282828000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
38383838383838383838383838383838000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
48484848484848484848484848484848000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
58585858585858585858585858585858000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
68686868686868686868686868686868000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
78787878787878787878787878787878000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888888888888888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
98989898989898989898989898989898000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
28882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
28882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
28282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
28282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
28282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
28282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
28282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
28282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828
82888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288828882888288
28282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828
88828882888288828882888288828882888eeee28882888288828882888288828882888288828882888288828882888288828882888288828882888288828882
28282828282828282828282828282828eeeeeee82828282828282828282828282828282828282828282828282828282828282828282828282828282828282828
828882888288828882888288828882885eeeeeee6666828882888288828882866668828882888288828882666688828882888288828882888288828882888288
282828282828282828282828282828285eeeeeee6666282828282828282866666668282828282828282666666628282828282828282828282828282828282828
8882888288828882888288828882888255eeeeee6666688288828882666656666666888288828886666566666662888288828882888288828882888288828882
2828282828282828282828282828286655eee2226666682828282666666656666666282828286666666566666668282828282828282828282828282828282828
82828282828282828282828282666656552222226666628286666566666665666666828266665666666656666662828666628282828282828282828282828282
28282828282828282828282666666656552222226611186666666566666665666111266666665666666656661118666666682828282828282828282828282828
88828882888288828882888566666665552222221166665666666656666665111666656666666566666651116666566666668882888288828882888288828882
28282828282828282828282566666665552222226666665666666656661115666666656666666566611156666666566666662828282828282828282828282828
82828282828282828282828556666665552222226666666566666651116666566666665666666511166665666666656666668282828282828282828282828282
28282828282828282828282556661115552222226666666566611156666666566666665666111566666665666666656661112828282828282828282828282828
82828282828282828282828251116666552222225666666511166665666666656666665111666656666666566666651116666282828282828282828282828282
22282228222822282228222856666666552222225666111566666665666666656661115666666656666666566611156666666228222822282228222822282228
82828282828282828282828285666666652222225111666656666666566666651116666566666665666666511166665666666682828282828282828282828282
28282828282828282828282825666666652221115666666656666666566611156666666566666665666111566666665666666628282828282828282828282828
82828282828282828282828285566666651116666566666665666666511166665666666656666665111111556666666566666682828282828282828282828282
22282228222822282228222825566611156666666566666665666111566666665666666656661115111111556666666566611128222822282228222822282228
82828282828282828282828282511166665666666656666665111666656666666566666651116666111999455666666511111182828282828282828282828282
28222822282228222822282228566666665666666656661115666666656666666566611156666666999aaa945666111511122822282228222822282228222822
828282828282828282828282828566666665666666511166665666666656666665111666656666666aaaaa995111666682828282828282828282828282828282
222222222222222222222222222566666665666111566666665666666656661115666666656666666aa777a95666666622222222222222222222222222222222
82828282828282828282828282855666666511166665666666656666665111111256666666566666677776666566666662828282828282828282828282828282
28222822282228222822282228255666111566666665666666656661115111222856666666566611176666666566666668222822282228222822282228222822
82828282828282828282828282825111111256666666566666651111118282828255666666511166665666666656666662828282828282828282828282828282
22222222222222222222222222225111222256666666566611151112222222222255666111566666665666666656661112222222222222222222222222222222
82828282828282828282828282828282828255666666511111128282828282828285111111856666666566666651111112828282828282828282828282828282
28222822282228222822282228222822282255666111511128222822282228222825111228256666666566611151112228222822282228222822282228222822
82828282828282828282828282828282828285111111828282828282828282828282828282855666666511111182828282828282828282828282828282828282
22222222222222222222222222222222222225111222222222222222222222222222222222255666111511122222222222222222222222222222222222222222
82828282828282828282828282828282828282828282828282828282828282828282828282825111111282828282828282828282828282828282828282828282
22222222222222222222222222222222222222222222222222222222222222222222222222225111222222222222222222222222222222222222222222222222
82828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
82228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222822282228222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222

__gff__
00000000000b02000115281a2a19492324291c1e1d1116000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101000000010101010100000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101000000000000010101010101000000000000000000000000000000000000000000
010000000001010101010000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005050505050505000000000000010101010d0d0109010101010801000000000000010000010101000000000000000000000000000101010100000000
0000000101010100010101010000000000000001010100000000000000000000000000000000010101010000010101000000000000000101010101010100000000000000050505050505050000000000000101010100000000000000010101000000000000010000010101010100000000000000000000000101010100000000
000000010101010101010101000000000000000108010101010000000000000001010101000001010a0100000106010001010101000001010100000101000000000101010100000000000101010000000001010f0100000000000000000000000801010101010000000000010101010001010100000000000100000101010100
0000000101000108010101010000000000000001010101010101010100000000010109010000010101010000010101000101010101010101010000010101010000010101000000000000000101000000000101010100000000000000000000000000000001010100000000010106010001080101010101010100000001060100
000000010101010101010101000000000000000001010101010101010100000001010101000001010101000001010100010801010000000000000001010601000001010100000000000000010100000000000001010110010e0e010101000000000000000101010000000000010101000101010000000001010a000001010100
0000000101010100010101010000000000000000000000000101060101000000010801010b0b010101010c0c0101010001010101000000000000000101010100000108010000010101010505050505000000000000000000000000010101010f0000000000000100000101000000000001010100000000010101000001010100
000000000001010101010101000000000000000000000000000101010000000001010101000001010101000000000000000000000000000000000000010101000001010100000101010105050505050000010101000000000000000101010101000000000000010101010100000000000001010c000000010000000000000000
0100000000010101010100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001060100000505010500000106010101111101010101010100000000000000000101010101000000000000000101010101010000000000000000
0101000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100000505050500000101010100000000000000000000000000000000000001010100000000000000000000000000000000000000000000
0000000000000000000101010000000000000000000000000000000000000000000101010000000000010101010101000000000101011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000113010000000000000000000000000000000000000000000106010c0c010b0b011501011401000000000106011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000101010000000001010101000000010000000101010100000101010000000000010101010b00000000000101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010000000101010101010001081301000000010000000113120100000000000000000000000101010b00000000000100000001010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0108010112010000000101010106010001010101010101010101010101010100000000000000000000000000010100000000000100000001010000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010000000101010101010000000000000001060100000000000000000000000000000000000000000100000000080101010101010000010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000101010000000000000000000001010100000000000000000000000000000000000000000100000000000000000001100000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000113010000000000000000000000000000000000000000000000000000000000000000010100000000000000000001010101000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000101010000000000000000000000000000000000000000000000000001010101010000010100000000000000000001010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000010f0000010101160100000000000000000000000001010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000f050000000d0500000000000010500b050020500205003050040500405004050050500505005050050500000021050200501f0501e0501e050000000000000000000000000000000000000000000000
